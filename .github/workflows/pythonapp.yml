name: Python application

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=21 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest -v
    - name: Deployment
      env:
        OPENWEATHER_KEY: ${{secrets.OPENWEATHER_KEY}}
        WUNDERGROUND_KEY: ${{secrets.WUNDERGROUND_KEY}}
        YANDEX_VOICE_KEY: ${{secrets.YANDEX_VOICE_KEY}}
        GITHUB_TOKENS: ${{secrets.TOKEN}}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
      run: |
        echo Deployment
        # Ensure that the GITHUB_TOKEN secret is included
        if [[ -z "$GITHUB_TOKEN" ]]; then
          echo "Set the GITHUB_TOKEN env variable."
          exit 1
        fi
        echo $OPENWEATHER_KEY
        echo $WUNDERGROUND_KEY
        echo $YANDEX_VOICE_KEY
        echo $HOME
        echo $GITHUB_WORKFLOW
        echo $GITHUB_ACTION
        echo $GITHUB_ACTIONS
        echo $GITHUB_ACTOR
        echo $GITHUB_REPOSITORY
        echo $GITHUB_EVENT_NAME
        echo $GITHUB_EVENT_PATH
        echo $GITHUB_WORKSPACE
        echo $GITHUB_SHA
        echo $GITHUB_REF
        echo $GITHUB_HEAD_REF
        echo $GITHUB_BASE_REF  
